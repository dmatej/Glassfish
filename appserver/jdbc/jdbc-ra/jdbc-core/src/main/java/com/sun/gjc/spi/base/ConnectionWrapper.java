/*
 * Copyright (c) 1997, 2018 Oracle and/or its affiliates. All rights reserved.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0, which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the
 * Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
 * version 2 with the GNU Classpath Exception, which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 */

package com.sun.gjc.spi.base;


import java.sql.SQLException;

/**
 *
 * @author Shalini M
 */
public interface ConnectionWrapper {
    PreparedStatementWrapper prepareCachedStatement(String sql, int resultSetType,
            int resultSetConcurrency, boolean enableCaching) throws SQLException;

    PreparedStatementWrapper prepareCachedStatement(String sql, int resultSetType,
            int resultSetConcurrency, int resultSetHoldability,
            boolean enableCaching) throws SQLException;

    PreparedStatementWrapper prepareCachedStatement(String sql,
              String[] columnNames, boolean enableCaching) throws SQLException;

    PreparedStatementWrapper prepareCachedStatement(String sql,
              int[] columnIndexes, boolean enableCaching) throws SQLException;

    PreparedStatementWrapper prepareCachedStatement(String sql,
              int autoGeneratedKeys, boolean enableCaching) throws SQLException;

    CallableStatementWrapper callableCachedStatement(String sql, int resultSetType,
            int resultSetConcurrency, boolean enableCaching) throws SQLException;

    CallableStatementWrapper callableCachedStatement(String sql, int resultSetType,
            int resultSetConcurrency, int resultSetHoldability,
            boolean enableCaching) throws SQLException;
}
