<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE project [
<!--

    Copyright (c) 2018 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0, which is available at
    http://www.eclipse.org/legal/epl-2.0.

    This Source Code may also be made available under the following Secondary
    Licenses when the conditions for such availability set forth in the
    Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
    version 2 with the GNU Classpath Exception, which is available at
    https://www.gnu.org/software/classpath/license.html.

    SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0

-->

<!ENTITY commonSetup SYSTEM "file:./../../../config/properties.xml">
<!ENTITY commonBuild SYSTEM "file:./../../../config/common.xml">
<!ENTITY commonlazyinit SYSTEM "file:./../common.xml">
<!ENTITY testproperties SYSTEM "file:./build.properties">
]>

<project name="jms-msgdest-jmsweb-App" default="usage" basedir=".">

    &commonSetup;
    &commonBuild;
    &commonlazyinit;
    &testproperties;

    <target name="all" depends="pre-start,clean,build,create-resources,deploy,run,undeploy,delete-resources"/>

    <target name="clean" depends="init-common">
      <antcall  target="clean-common"/>
    </target>

    <target name="compile" depends="clean">
        <antcall target="compile-common">
            <param name="src" value="client"/>
        </antcall>
        <antcall target="compile-common">
            <param name="src" value="servlet"/>
            <param name="s1astest.classpath" value="${s1astest.classpath}:${env.S1AS_HOME}/lib/install/applications/jmsra/imqjmsra.jar"/>
        </antcall>
    </target>

    <target name="build-war">
        <mkdir dir="${assemble.dir}/a/b"/>
        <antcall target="package-war-common">
            <param name="war.classes" value="${build.classes.dir}"/>
            <param name="war.file" value="${assemble.dir}/a/b/${appname}-web.war"/>
        </antcall>
   </target>

    <target name="build" depends="compile, build-war">
        <antcall target="build-ear-common">
            <param name="war.classes"
              value="**/*Servlet*.class" />
            <param name="appclientjar.classes"
              value="**/*Client*.class" />
        </antcall>
        <ear earfile="${assemble.dir}/${appname}App.ear" update="true">
           <fileset dir="${assemble.dir}">
              <include name="a/b/*.war"/>
           </fileset>
        </ear>
    </target>

    <target name="deploy"
            depends="init-common">
        <antcall target="deploy-common"/>
    </target>

    <target name="create-resources" depends="init-common">
        <antcall target="asadmin-batch-common">
          <param name="asadmin.file" value="create_resources.asadmin"/>
        </antcall>
    </target>

    <target name="delete-resources" depends="init-common">
        <antcall target="asadmin-batch-common">
          <param name="asadmin.file" value="delete_resources.asadmin"/>
        </antcall>
    </target>

    <target name="run" depends="init-common">
        <antcall target="restart-server"/>
        <antcall target="runclient-common">
          <param name="appclient.application.args" value="${http.host} ${http.port}"/>
        </antcall>
    </target>

    <target name="undeploy" depends="init-common">
        <antcall target="undeploy-common"/>
    </target>

    <target name="usage">
        <antcall target="usage-common"/>
        <echo>
          ant create-resources Create all destinations and connection factories
          ant delete-resources Delete all destinations and connection factories
        </echo>
    </target>
</project>
