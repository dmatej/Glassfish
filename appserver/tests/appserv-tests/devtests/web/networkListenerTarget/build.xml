<?xml version="1.0" encoding="ISO-8859-1"?>
<!--

    Copyright (c) 1997, 2018 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0, which is available at
    http://www.eclipse.org/legal/epl-2.0.

    This Source Code may also be made available under the following Secondary
    Licenses when the conditions for such availability set forth in the
    Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
    version 2 with the GNU Classpath Exception, which is available at
    https://www.gnu.org/software/classpath/license.html.

    SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0

-->

<!DOCTYPE project [
<!ENTITY commonSetup SYSTEM "./../../../config/properties.xml">
<!ENTITY commonBuild SYSTEM "./../../../config/common.xml">
<!ENTITY eeCommonBuild SYSTEM "./../../../config/ee-common.xml">
<!ENTITY run SYSTEM "./../../../config/run.xml">
<!ENTITY testproperties SYSTEM "./build.properties">
]>

<project name="webcontainer_unittest" default="all" basedir=".">

    &commonSetup;
    &commonBuild;
    &eeCommonBuild;
    &testproperties;
    &run;

    <target name="all" depends="build,create-cluster,create-local-instance,restart,create-virtual-server,create-network-listener,deploy,run,undeploy,delete-network-listener,delete-virtual-server,stop-local-instance,delete-local-instance,delete-cluster"/>

    <target name="restart" depends="init-common">
      <antcall target="restart-server-instance-common"/>
      <antcall target="start-local-instance"/>
      <sleep seconds="5"/>
    </target>

    <target name="create-cluster" depends="init-common">
        <antcall target="create-cluster-common"/>
    </target>

    <target name="create-local-instance" depends="init-common">
        <antcall target="create-local-instance-common"/>
    </target>

    <target name="delete-local-instance" depends="init-common">
        <antcall target="delete-local-instance-common"/>
    </target>

    <target name="start-local-instance" depends="init-common">
        <antcall target="start-local-instance-common"/>
    </target>

    <target name="stop-local-instance" depends="init-common">
        <antcall target="stop-local-instance-common"/>
    </target>

    <target name="delete-cluster" depends="init-common">
        <antcall target="delete-cluster-common"/>
    </target>

    <target name="create-virtual-server" depends="init-common">
      <antcall target="asadmin-common-ignore-fail">
        <param name="admin.command" value="create-virtual-server" />
        <param name="operand.props"
               value="--hosts ${http.host} --target ${cluster.name} c1-server"/>
      </antcall>
    </target>

    <target name="create-protocol" depends="init-common">
      <antcall target="asadmin-common-ignore-fail">
        <param name="admin.command" value="create-protocol" />
        <param name="operand.props"
               value="--target ${cluster.name} c1-protocol"/>
      </antcall>
    </target>

    <target name="create-http" depends="init-common">
      <antcall target="asadmin-common-ignore-fail">
        <param name="admin.command" value="create-http" />
        <param name="operand.props"
               value="--target ${cluster.name} --default-virtual-server c1-server c1-protocol"/>
      </antcall>
    </target>

    <target name="delete-protocol" depends="init-common">
      <antcall target="asadmin-common-ignore-fail">
        <param name="admin.command" value="delete-protocol" />
        <param name="operand.props"
               value="--target ${cluster.name} c1-protocol"/>
      </antcall>
    </target>

    <target name="create-network-listener" depends="create-protocol,create-http">
      <antcall target="asadmin-common-ignore-fail">
        <param name="admin.command" value="create-network-listener" />
        <param name="operand.props"
               value="--target ${cluster.name} --listenerport ${http.alternate.port} --protocol c1-protocol c1-network-listener"/>
      </antcall>
    </target>

    <target name="delete-virtual-server" depends="init-common">
      <antcall target="asadmin-common-ignore-fail">
        <param name="admin.command" value="delete-virtual-server" />
        <param name="operand.props"
               value="--target ${cluster.name} c1-server"/>
      </antcall>
    </target>

    <target name="delete-network-listener" depends="init-common">
      <antcall target="asadmin-common-ignore-fail">
        <param name="admin.command" value="delete-network-listener" />
        <param name="operand.props"
               value="--target ${cluster.name} c1-network-listener"/>
      </antcall>
    </target>

    <target name="clean" depends="init-common">
      <antcall target="clean-common"/>
    </target>

    <target name="compile" depends="clean">
        <antcall target="compile-common">
            <param name="src" value="servlet"/>
        </antcall>
    </target>

    <target name="build" depends="compile">
        <property name="hasWebclient" value="yes"/>
        <antcall target="webclient-war-common">
            <param name="hasWebclient" value="yes"/>
            <param name="webclient.war.classes" value="**/*.class"/>
        </antcall>
         <javac
            srcdir="."
            classpath="${env.APS_HOME}/lib/reportbuilder.jar"
            includes="WebTest.java"/>
    </target>

    <target name="build-publish-war" depends="build, publish-war-common" />

    <target name="deploy" depends="init-common">
        <echo message="Deploying ${assemble.dir}/${appname}-web.war from ${basedir}."
              level="verbose"/>
        <property name="precompilejsp" value="true"/>
        <exec executable="${ASADMIN}" failonerror="false">
            <arg line="deploy"/>
            <arg line="${as.props}"/>
            <arg line="--contextroot ${contextroot}"/>
            <arg line="--precompilejsp=${precompilejsp}"/>
            <arg line="--upload=true"/>
            <arg line="--virtualservers c1-server"/>
            <arg line="--target ${cluster.name}"/>
            <arg line="${assemble.dir}/${appname}-web.war"/>
        </exec>
    </target>

    <target name="run" depends="init-common">
        <java classname="WebTest">
          <arg value="${http.host}"/>
          <arg value="${http.alternate.port}"/>
          <arg value="${contextroot}"/>
          <classpath>
           <pathelement location="${env.APS_HOME}/lib/reportbuilder.jar"/>
           <pathelement location="."/>
         </classpath>
        </java>
    </target>

    <target name="undeploy" depends="init-common">
        <echo message="Undeploying warfile ${appname}-web from
            ${assemble.dir}/${appname}-web.war from ${basedir}." level="verbose"/>
        <exec executable="${ASADMIN}" failonerror="false">
            <arg line="undeploy"/>
            <arg line="${as.props}"/>
            <arg line="--target ${cluster.name}"/>
            <arg line="${appname}-web"/>
        </exec>
    </target>

    <target name="usage">
        <antcall target="usage-common"/>
    </target>
</project>
